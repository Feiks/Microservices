
# Server Configuration
server.port=8080

# Spring Application Configuration
spring.application.name=customer

# DataSource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5433/customer
spring.datasource.username=amigoscode
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
logging.level.root = info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway = TRACE
# JPA Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

eureka.client.service-url.defaultZone= http://localhost:8761/eureka
#management.endpoints.web.exposure.include=health, info, prometheus
#management.endpoint.loggers.enabled=false
management.tracing.sampling.probability=1.0
#management.metrics.tags.application=springboot-3
#management.metrics.distribution.percentiles-histogram.http.server.requests=true
spring.zipkin.base-url=http://localhost:9411
management.endpoints.web.exposure.include=prometheus
# For Exemplars to work we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true
# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
spring.rabbitmq.addresses=localhost
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.queue.name=javaguides_queue
spring.rabbitmq.exchange.name=javaguides_exchange
spring.rabbitmq.routing.key=javaguides_routing_key

